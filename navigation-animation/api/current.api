// Signature format: 4.0
package com.google.accompanist.navigation.animation {

  @androidx.compose.animation.ExperimentalAnimationApi @androidx.navigation.Navigator.Name("animatedComposable") public final class AnimatedComposeNavigator extends androidx.navigation.Navigator<com.google.accompanist.navigation.animation.AnimatedComposeNavigator.Destination> {
    ctor public AnimatedComposeNavigator();
    method public com.google.accompanist.navigation.animation.AnimatedComposeNavigator.Destination createDestination();
  }

  @androidx.compose.animation.ExperimentalAnimationApi @androidx.navigation.NavDestination.ClassType(Composable::class) public static final class AnimatedComposeNavigator.Destination extends androidx.navigation.NavDestination {
    ctor public AnimatedComposeNavigator.Destination(com.google.accompanist.navigation.animation.AnimatedComposeNavigator navigator, kotlin.jvm.functions.Function1<? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? enterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? exitTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? popEnterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? popExitTransition);
  }

  public final class AnimatedNavHostKt {
    method @androidx.compose.animation.ExperimentalAnimationApi @androidx.compose.runtime.Composable public static void AnimatedNavHost(androidx.navigation.NavHostController navController, String startDestination, optional androidx.compose.ui.Modifier modifier, optional String? route, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition> enterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition> exitTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition> popEnterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition> popExitTransition, kotlin.jvm.functions.Function1<? super androidx.navigation.NavGraphBuilder,kotlin.Unit> builder);
    method @androidx.compose.animation.ExperimentalAnimationApi @androidx.compose.runtime.Composable public static void AnimatedNavHost(androidx.navigation.NavHostController navController, androidx.navigation.NavGraph graph, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition> enterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition> exitTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition> popEnterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition> popExitTransition);
  }

  public final class NavGraphBuilderKt {
    method @androidx.compose.animation.ExperimentalAnimationApi public static void composable(androidx.navigation.NavGraphBuilder, String route, optional java.util.List<androidx.navigation.compose.NamedNavArgument> arguments, optional java.util.List<androidx.navigation.NavDeepLink> deepLinks, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? enterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? exitTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? popEnterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? popExitTransition, kotlin.jvm.functions.Function1<? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
    method @androidx.compose.animation.ExperimentalAnimationApi public static void navigation(androidx.navigation.NavGraphBuilder, String startDestination, String route, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? enterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? exitTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.EnterTransition>? popEnterTransition, optional kotlin.jvm.functions.Function2<? super androidx.navigation.NavBackStackEntry,? super androidx.navigation.NavBackStackEntry,? extends androidx.compose.animation.ExitTransition>? popExitTransition, kotlin.jvm.functions.Function1<? super androidx.navigation.NavGraphBuilder,kotlin.Unit> builder);
  }

  public final class NavHostControllerKt {
    method @androidx.compose.animation.ExperimentalAnimationApi @androidx.compose.runtime.Composable public static androidx.navigation.NavHostController rememberAnimatedNavController();
  }

}

