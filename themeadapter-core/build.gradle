/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'me.tylerbwong.gradle.metalava'
}

kotlin {
    explicitApi()
}

android {
    namespace "com.google.accompanist.themeadapter.core"

    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 21
        // targetSdkVersion has no effect for libraries. This is only used for the test APK
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
        buildConfig false
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composeCompiler.get()
    }

    lint {
        textReport = true
        textOutput = new File("stdout")
        // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks
        checkReleaseBuilds = false
    }

    packagingOptions {
        // Multiple dependencies bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        animationsDisabled true
    }

    sourceSets {
        test {
            java.srcDirs += 'src/sharedTest/kotlin'
            res.srcDirs += 'src/sharedTest/res'
        }
        androidTest {
            java.srcDirs += 'src/sharedTest/kotlin'
            res.srcDirs += 'src/sharedTest/res'
        }
    }
}

metalava {
    sourcePaths.setFrom("src/main")
    filename.set("api/current.api")
    reportLintsAsErrors.set(true)
}

dependencies {
    api libs.androidx.core
    api libs.compose.foundation.foundation
    api libs.kotlin.stdlib
    api libs.androidx.appcompat
    api libs.mdc

    // ======================
    // Test dependencies
    // ======================

    androidTestImplementation project(':internal-testutils')
    testImplementation project(':internal-testutils')

    androidTestImplementation libs.junit
    testImplementation libs.junit

    androidTestImplementation libs.compose.ui.test.junit4
    testImplementation libs.compose.ui.test.junit4

    androidTestImplementation libs.androidx.test.runner
    testImplementation libs.androidx.test.runner

    androidTestImplementation libs.androidx.test.espressoCore
    testImplementation libs.androidx.test.espressoCore

    testImplementation libs.robolectric
}

apply plugin: 'com.vanniktech.maven.publish'
