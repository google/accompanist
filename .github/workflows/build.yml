name: Build & test

on:
  push:
    branches:
      - main
      - snapshot
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    # Skip build if head commit contains 'skip ci'
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build, lint and spotless
        run: ./gradlew spotlessCheck assemble assembleAndroidTest lintDebug metalavaCheckCompatibility --scan

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

  test:
    runs-on: macOS-latest
    needs: build
    timeout-minutes: 70
    
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        api-level: [22, 26, 28, 29]
        shard: [0, 1, 2]

    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build tests
        run: ./gradlew assembleDebugAndroidTest --scan

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          profile: Galaxy Nexus
          script: |
            adb logcat > logcat.txt &
            ./gradlew connectedCheck --scan --continue -Pandroid.testInstrumentationRunnerArguments.numShards=3 -Pandroid.testInstrumentationRunnerArguments.shardIndex=${{ matrix.shard }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.api-level }}-${{ matrix.shard }}
          path: logcat.txt

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.api-level }}-${{ matrix.shard }}
          path: "**/build/outputs/*/connected/*.xml"

  deploy:
    if: github.event_name == 'push' # only deploy for pushed commits (not PRs)

    runs-on: ubuntu-latest
    needs: [build, test]
    timeout-minutes: 30
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decrypt secrets
        run: release/signing-setup.sh ${{ secrets.ENCRYPT_KEY }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Deploy to Sonatype
        run: ./gradlew publish --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh
